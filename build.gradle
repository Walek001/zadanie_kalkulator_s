plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'com.sonalake'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

sourceSets {
    integrationTests {
            java.srcDir "$projectDir/src/integrationTests/java"
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: '2.2.1.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.2.1.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtime 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'
    compile group: 'org.springframework', name: 'spring-web', version: '5.2.1.RELEASE'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
}

test {
    useJUnitPlatform()
}


configurations {
    integrationTestsImplementation.extendsFrom testImplementation
    integrationTestsRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTests.output.classesDirs
    classpath = sourceSets.integrationTests.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
